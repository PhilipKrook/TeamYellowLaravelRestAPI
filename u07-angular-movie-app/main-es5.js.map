{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/api.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/movie-detail/movie-detail.component.ts","webpack:///src/app/movie-detail/movie-detail.component.html","webpack:///src/app/person-detail/person-detail.component.ts","webpack:///src/app/person-detail/person-detail.component.html","webpack:///src/app/search-result/search-result.component.ts","webpack:///src/app/search-result/search-result.component.html","webpack:///src/app/search/search.component.ts","webpack:///src/app/search/search.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ApiService","httpClient","httpOptions","headers","API_KEY","MOVIE_URL","BASE_URL","SEARCH_URL","searchResults","get","movieId","query","params","join","queryUrl","results","next","asObservable","actorUrl","providedIn","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","DashboardComponent","apiService","getMovies","subscribe","data","console","log","movies","MovieDetailComponent","route","getMovie","getDetails","window","location","pathname","split","response","movie","parseInt","snapshot","paramMap","getCredits","cast","crew","PersonDetailComponent","imageUri","getPerson","actor","birthday","birth","Date","getTime","now","timeDiff","age","Math","floor","error","profile_path","SearchResultComponent","router","success","searchBoxElm","document","querySelector","value","navigate","SearchComponent","searchValue","searchResult","clearTimeout","timer","setTimeout","executeSearch","bind","length","setResults","searchTmdb","filter","item","media_type","search","environment","production","bootstrapModule","catch","err"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaC,U;;;AAmBX,0BAAoBC,UAApB,EAA4C;AAAA;;AAAxB,aAAAA,UAAA,GAAAA,UAAA;AAlBZ,aAAAC,WAAA,GAAc;AACpBC,iBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAE,4BAAgB;AAAlB,WAAhB;AADW,SAAd,CAkBoC,CAb5C;;AACQ,aAAAC,OAAA,GAAU,kCAAV,CAYoC,CAV5C;;AACQ,aAAAC,SAAA,GAAY,qCAAZ;AAEA,aAAAC,QAAA,GAAW,4BAAX;AAEA,aAAAC,UAAA,GAAa,2CAAb;AAED,aAAAC,aAAA,GAAgB,IAAI,4CAAJ,EAAhB;AAGwC,O,CAE/C;;;;;oCACY;AACV,iBAAO,KAAKP,UAAL,CAAgBQ,GAAhB,8DAA0E,KAAKL,OAA/E,EAAP;AACD,S,CAED;;;;iCACSM,O,EAAS;AAChB,iBAAO,KAAKT,UAAL,CAAgBQ,GAAhB,WAAuB,KAAKJ,SAA5B,SAAwCK,OAAxC,sBAA2D,KAAKN,OAAhE,EAAP;AACD,S,CAED;AACA;;;;mCACWO,K,EAAa;AACtB,cAAMC,MAAM,GAAW,iBAAUD,KAAV,qBAA8B,KAAKP,OAAnC,GAA8CS,IAA9C,CAAmD,GAAnD,CAAvB;AACA,cAAMC,QAAQ,aAAM,KAAKP,UAAX,cAAyBK,MAAzB,CAAd;AACA,iBAAO,KAAKX,UAAL,CAAgBQ,GAAhB,CAAoBK,QAApB,CAAP;AACD,S,CAED;;;;mCACWC,O,EAAY;AACrB,eAAKP,aAAL,CAAmBQ,IAAnB,CAAwBD,OAAxB;AACD;;;qCACS;AACR,iBAAO,KAAKP,aAAL,CAAmBS,YAAnB,EAAP;AACD,S,CAGD;;;;kCACUlB,E,EAAU;AAClB,cAAMmB,QAAQ,aAAM,KAAKZ,QAAX,uBAAgCP,EAAhC,sBAA8C,KAAKK,OAAnD,CAAd;AACA,iBAAO,KAAKH,UAAL,CAAgBQ,GAAhB,CAAyBS,QAAzB,CAAP;AACD,S,CAED;;;;mCACWnB,E,EAAY;AACrB,iBAAO,KAAKE,UAAL,CAAgBQ,GAAhB,WAAuB,KAAKJ,SAA5B,SAAwCN,EAAxC,8BAA8D,KAAKK,OAAnE,EAAP;AACD;;;;;;;uBAzDUJ,U,EAAU,uH;AAAA,K;;;aAAVA,U;AAAU,eAAVA,UAAU,K;AAAA,kBAJT;;;;;sEAIDA,U,EAAU;cALtB,wDAKsB;eALX;AACVmB,oBAAU,EAAE;AADF,S;AAKW,Q;;;;;;;;;;;;;;;;;;;;;;ACVvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAMC,MAAM,GAAW,CACrB;AAAEC,UAAI,EAAE,EAAR;AAAYC,gBAAU,EAAE,YAAxB;AAAsCC,eAAS,EAAE;AAAjD,KADqB,EAErB;AAAEF,UAAI,EAAE,WAAR;AAAqBG,eAAS,EAAE;AAAhC,KAFqB,EAGrB;AAAEH,UAAI,EAAE,kBAAR;AAA4BG,eAAS,EAAE;AAAvC,KAHqB,EAIrB;AAAEH,UAAI,EAAE,mBAAR;AAA6BG,eAAS,EAAE;AAAxC,KAJqB,CAAvB;;QAUaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBN,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBK,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBN,MAArB,CAAD,CADD;AAERtB,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;AChB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWa8B,Y,GARb;AAAA;;AASE,WAAAC,KAAA,GAAQ,UAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,wN;AAAA;AAAA;ACXzB;;AAAI;;AAAS;;AACb;;AACI;;AAEJ;;AAEA;;;;AANI;;AAAA;;;;;;;;;sEDWSA,Y,EAAY;cARxB,uDAQwB;eARd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAQc,Q;;;;;;;;;;;;;;;;;;AEXzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAiCaC,S;;;;;YAAAA,S;AAAS,kBAHR,2DAGQ;;;;yBAATA,S;AAAS,O;AAAA,iBAJT,E;AAAE,gBALJ,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,CAKI;;;;0HAIFA,S,EAAS;AAAA,uBAnBlB,2DAmBkB,EAjBlB,yFAiBkB,EAhBlB,iFAgBkB,EAflB,wEAekB,EAdlB,4FAckB,EAblB,4FAakB;AAbG,kBAKrB,uEALqB,EAMrB,oEANqB,EAOrB,qEAPqB;AAaH,O;AANF,K;;;;;sEAMPA,S,EAAS;cArBrB,sDAqBqB;eArBZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAGZ,yFAHY,EAIZ,iFAJY,EAKZ,wEALY,EAMZ,4FANY,EAOZ,4FAPY,CADN;AAYRP,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,CAZD;AAiBRQ,mBAAS,EAAE,EAjBH;AAkBRC,mBAAS,EAAE,CAAC,2DAAD;AAlBH,S;AAqBY,Q;;;;;;;;;;;;;;;;;;ACjCtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACOA;;AAEI;;AAEA;;AAAI;;AAAuD;;AAAe;;AAAI;;AAC9E;;AAAG;;AAA4B;;AACnC;;;;;;AAJS;;AAAA;;AAEc;;AAAA;;AAAwC;;AAAA;;AACxD;;AAAA;;;;QDFMC,kB;;;AAIX,kCAAoBC,UAApB,EAA4C;AAAA;;AAAxB,aAAAA,UAAA,GAAAA,UAAA;AAA2B,O,CAG/C;;;;;mCACQ;AAAA;;AACN,eAAKA,UAAL,CAAgBC,SAAhB,GAA4BC,SAA5B,CAAsC,UAACC,IAAD,EAAU;AAC9CC,mBAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,iBAAI,CAACG,MAAL,GAAcH,IAAI,CAAC,SAAD,CAAlB;AACD,WAHD;AAMD;;;;;;;uBAfUJ,kB,EAAkB,wH;AAAA,K;;;YAAlBA,kB;AAAkB,oC;AAAA,c;AAAA,a;AAAA,yJ;AAAA;AAAA;ACV/B;;AACA;;AAEA;;AACI;;AAAI;;AAAc;;AACtB;;AAEA;;;;AAAoB;;AAAA;;;;;;;;;sEDGPA,kB,EAAkB;cAN9B,uDAM8B;eANpB;AACTP,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAMoB,Q;;;;;;;;;;;;;;;;;;;;;;AEV/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACeY;;;;;;AACI;;;;;;AAFR;;AACI;;AAGA;;AAAM;;AAAiD;;AAAmB;;AAAK;;AAEnF;;;;;;AAL6B;;AAAA;;AAGhB;;AAAA;;AAA8C;;AAAA;;AAAwB;;AAAA;;;;;;AAOnF;;AAA0C;;AAAiD;;;;;;AAAjD;;AAAA;;;;;;AAzBlD;;AAEI;;AACA;;AAAI;;AAAe;;AACnB;;AAAqB;;AAAQ;;AAC7B;;AAAe;;AAAkB;;AACjC;;AAAG;;AAA4B;;AAC/B;;AAAG;;AAA6B;;AAChC;;AAAG;;AAAoC;;AACvC;;AAAG;;AAAyB;;AAG5B;;AAAgB;;AAAK;;AACrB;;AACI;;AAOJ;;AAEA;;AAAI;;AAAK;;AACT;;AACI;;AACJ;;AACJ;;;;;;AAzBuB;;AAAA;;AACf;;AAAA;;AAEW;;AAAA;;AACZ;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAKK;;AAAA;;AAWA;;AAAA;;;;;;AAIZ;;AACI;;AAAI;;AAAiB;;AACzB;;;;QDlBaa,oB;;;AAIX,oCACUP,UADV,EAEUQ,KAFV,EAE+B;AAAA;;AADrB,aAAAR,UAAA,GAAAA,UAAA;AACA,aAAAQ,KAAA,GAAAA,KAAA;AACL;;;;mCAEM;AACT,eAAKC,QAAL;AACA,eAAKC,UAAL;AACD;;;mCAGU;AAAA;;AACT,cAAMtC,OAAO,GAAGuC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,CAAhB;AACA,eAAKd,UAAL,CACGS,QADH,CACYrC,OADZ,EAEG8B,SAFH,CAEa,UAACa,QAAD,EAAc;AACvB,kBAAI,CAACC,KAAL,GAAaD,QAAb;AACD,WAJH;AAKD;;;qCAGS;AAAA;;AACR,cAAMtD,EAAE,GAAGwD,QAAQ,CAAC,KAAKT,KAAL,CAAWU,QAAX,CAAoBC,QAApB,CAA6BhD,GAA7B,CAAiC,IAAjC,CAAD,EAAyC,EAAzC,CAAnB;AACA,eAAK6B,UAAL,CAAgBoB,UAAhB,CAA2B3D,EAA3B,EAA+ByC,SAA/B,CAAyC,UAACa,QAAD,EAAmB;AAC1DX,mBAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBU,QAAvB;AACA,kBAAI,CAACC,KAAL,CAAWK,IAAX,GAAkBN,QAAQ,CAACM,IAA3B;AACA,kBAAI,CAACL,KAAL,CAAWM,IAAX,GAAkBP,QAAQ,CAACO,IAA3B;AACAlB,mBAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,MAAI,CAACW,KAAL,CAAWK,IAA/B;AACD,WALD;AAMD;;;;;;;uBAjCUd,oB,EAAoB,wH,EAAA,+H;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA,c;AAAA,a;AAAA,4W;AAAA;AAAA;ACbjC;;AA6BA;;;;AA7BkB;;AA6Bb;;AAAA;;;;;;;;;sEDhBQA,oB,EAAoB;cANhC,uDAMgC;eANtB;AACTf,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAMsB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEbjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACKQ;;AAA2B;;AAA4B;;;;;;AAA5B;;AAAA;;;;;;AAC3B;;AAAgB;;AAAY;;;;;;AAAZ;;AAAA;;;;;;AAChB;;AAAiC;;AAAwC;;;;;;AAAxC;;AAAA;;;;;;AAPzC;;AAEI;;AACA;;AAAqB;;AAAc;;AACnC;;AACI;;AACA;;AACA;;AAEJ;;AAEA;;AAAqB;;AAAS;;AAC9B;;AAAuB;;AAAmB;;AAC9C;;;;;;AAXS;;AAAA;;AACgB;;AAAA;;AAEb;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAKe;;AAAA;;;;QDDd6B,qB;;;AAMX,qCACUf,KADV,EAEUR,UAFV,EAGUY,QAHV,EAG4B;AAAA;;AAFlB,aAAAJ,KAAA,GAAAA,KAAA;AACA,aAAAR,UAAA,GAAAA,UAAA;AACA,aAAAY,QAAA,GAAAA,QAAA;AALV,aAAAY,QAAA,GAAW,kCAAX;AAMK;;;;mCAEG;AACN,eAAK/D,EAAL,GAAUwD,QAAQ,CAAC,KAAKT,KAAL,CAAWU,QAAX,CAAoBC,QAApB,CAA6BhD,GAA7B,CAAiC,IAAjC,CAAD,EAAyC,EAAzC,CAAlB;AACA,eAAKsD,SAAL;AACD,S,CACD;AACA;;;;oCACS;AAAA;;AACP,eAAKzB,UAAL,CAAgByB,SAAhB,CAA0B,KAAKhE,EAA/B,EAAmCyC,SAAnC,CACE,UAAAwB,KAAK,EAAI;AACP,kBAAI,CAACA,KAAL,GAAaA,KAAb;;AACA,gBAAIA,KAAK,CAACC,QAAV,EAAoB;AAClB,kBAAMC,KAAK,GAAG,IAAIC,IAAJ,CAASH,KAAK,CAACC,QAAf,EAAyBG,OAAzB,EAAd;AACA,kBAAIC,GAAJ;AACA,kBAAMC,QAAQ,GAAWD,GAAG,GAAGH,KAA/B;AACA,oBAAI,CAACK,GAAL,GAAWC,IAAI,CAACC,KAAL,CAAWH,QAAQ,GAAG,WAAtB,CAAX;AACD;AACF,WATH,EAUE,UAAAI,KAAK,EAAI;AACPhC,mBAAO,CAACgC,KAAR,CAAcA,KAAd;AACD,WAZH;AAcD,S,CACD;;;;4CACoBV,K,EAAa;AAC/B,cAAIA,KAAK,CAACW,YAAV,EAAwB;AACtB,mBAAO,KAAKb,QAAL,GAAgBE,KAAK,CAACW,YAA7B;AACD;AAEF;;;;;;;uBAxCUd,qB,EAAqB,+H,EAAA,wH,EAAA,yH;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA,c;AAAA,a;AAAA,mJ;AAAA;AAAA;ACXlC;;;;AAAkB;;;;;;;;;sEDWLA,qB,EAAqB;cALjC,uDAKiC;eALvB;AACT/B,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEXlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACEQ;;AACI;;AAAK;AAAA;;AAAA;;AAAA;;AAAA,8BAAc,eAAd,EAA+B,KAAF,GAA7B;AAA6B,SAA7B;;AACD;;AAAwB;;AAAa;;AACzC;;AACJ;;;;;;AAFgC;;AAAA;;;;;;;;AAGhC;;AACI;;AAAK;AAAA;;AAAA;;AAAA;;AAAA,8BAAc,gBAAd,EAAgC,KAAF,GAA9B;AAA8B,SAA9B;;AACD;;AAAwB;;AAAY;;AACxC;;AACJ;;;;;;AAFgC;;AAAA;;;;;;AARpC;;AACI;;AAKA;;AAKJ;;;;;;AAVS;;AAAA;;AAKA;;AAAA;;;;;;AAPb;;AACI;;AAYJ;;;;;;AAZS;;AAAA;;;;QDQI4C,qB;;;AAGX,qCAAoBtC,UAApB,EAAoDuC,MAApD,EAAoE;AAAA;;AAAhD,aAAAvC,UAAA,GAAAA,UAAA;AAAgC,aAAAuC,MAAA,GAAAA,MAAA;AAAmB;;;;mCAE/D;AAAA;;AACN,eAAKvC,UAAL,CAAgB9B,aAAhB,CAA8BgC,SAA9B,CACE,UAAAsC,OAAO,EAAI;AACT,kBAAI,CAACtE,aAAL,GAAqBsE,OAArB;AACD,WAHH,EAIE,UAAAJ,KAAK,EAAI;AACPhC,mBAAO,CAACgC,KAAR,CAAcA,KAAd;AACD,WANH;AAQD,S,CACD;;;;6BACKrD,I,EAActB,E,EAAU;AAC3B,eAAKS,aAAL,GAAqB,IAArB;AACA,cAAMuE,YAAY,GAAqBC,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAvC;AACAF,sBAAY,CAACG,KAAb,GAAqB,EAArB;AACA,eAAKL,MAAL,CAAYM,QAAZ,CAAqB,CAAC9D,IAAD,EAAOtB,EAAP,CAArB;AACD;;;;;;;uBArBU6E,qB,EAAqB,wH,EAAA,uH;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA,c;AAAA,a;AAAA,uF;AAAA;AAAA;ACTlC;;;;AAAK;;;;;;;;;sEDSQA,qB,EAAqB;cALjC,uDAKiC;eALvB;AACT9C,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;;;AETlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaoD,e;;;AAKX,+BACU9C,UADV,EACgC;AAAA;;AAAtB,aAAAA,UAAA,GAAAA,UAAA;AAHV,aAAA+C,WAAA,GAAc,EAAd;AAKK;;;;mCAEG,CAAY;;;+BAEb1E,K,EAAa;AAClB,eAAK2E,YAAL,GAAoB,IAApB;AACAC,sBAAY,CAAC,KAAKC,KAAN,CAAZ;AACA,eAAKA,KAAL,GAAaC,UAAU,CAAC,KAAKC,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAAD,EAAgC,GAAhC,EAAqChF,KAArC,CAAvB;AACD,S,CACD;AACA;AACA;AACA;;;;sCACcA,K,EAAa;AAAA;;AACzB,cAAIA,KAAK,KAAK,EAAV,IAAgBA,KAAK,CAACiF,MAAN,IAAgB,CAApC,EAAuC;AACrC,iBAAKtD,UAAL,CAAgBuD,UAAhB,CAA2B,IAA3B;AACA;AACD;;AAED,eAAKvD,UAAL,CAAgBwD,UAAhB,CAA2BnF,KAA3B,EAAkC6B,SAAlC,CACE,UAAAsC,OAAO,EAAI;AACT,kBAAI,CAACQ,YAAL,GAAoBR,OAAO,CAAC/D,OAAR,CAAgBgF,MAAhB,CAClB,UAACC,IAAD;AAAA,qBACEA,IAAI,CAACC,UAAL,KAAoB,OAApB,IAA+BD,IAAI,CAACC,UAAL,KAAoB,QADrD;AAAA,aADkB,CAApB;;AAIA,kBAAI,CAAC3D,UAAL,CAAgBuD,UAAhB,CAA2B,MAAI,CAACP,YAAhC;AACD,WAPH,EAQE,UAAAZ,KAAK,EAAI;AACPhC,mBAAO,CAACgC,KAAR,CAAcA,KAAd;AACD,WAVH;AAYD;;;;;;;uBAvCUU,e,EAAe,wH;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,c;AAAA,a;AAAA,kN;AAAA;AAAA;;;ACT5B;;AACI;;AACwB;AAAA;;AAAA;;AAAA,mBAAS,IAAAc,MAAA,YAAT;AAAgC,WAAhC;;AADxB;;AAEJ;;;;;;;;sEDMad,e,EAAe;cAL3B,uDAK2B;eALjB;AACTtD,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;AET5B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMmE,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,EACGC,KADH,CACS,UAAAC,GAAG;AAAA,aAAI7D,OAAO,CAACgC,KAAR,CAAc6B,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class ApiService {\n  private httpOptions = {\n    headers: new HttpHeaders({ 'Content-type': 'application/json' })\n  };\n\n\n  // Use your own API-key here.\n  private API_KEY = '0e6da493848bce79b514981005d24f35';\n\n  // Different URLs used in the functions below.\n  private MOVIE_URL = 'https://api.themoviedb.org/3/movie/';\n\n  private BASE_URL = 'https://api.themoviedb.org';\n\n  private SEARCH_URL = 'https://api.themoviedb.org/3/search/multi';\n\n  public searchResults = new Subject();\n\n\n  constructor(private httpClient: HttpClient) { }\n\n  // Function that displays popular movies at Dashboard.\n  getMovies() {\n    return this.httpClient.get(`https://api.themoviedb.org/3/movie/popular?api_key=${this.API_KEY}`);\n  }\n\n  // Function that gets the id for a specific movie, to show more details about it.\n  getMovie(movieId) {\n    return this.httpClient.get(`${this.MOVIE_URL}${movieId}?api_key=${this.API_KEY}`);\n  }\n\n  // Function used to search in TMDBs API, it takes a query(string,input) and joins it with\n  // SEARCH_URL to build up a correct URL.\n  searchTmdb(query: string): Observable<any> {\n    const params: string = [`query=${query}`, `api_key=${this.API_KEY}`].join('&');\n    const queryUrl = `${this.SEARCH_URL}?${params}`;\n    return this.httpClient.get(queryUrl);\n  }\n\n  // Sets and gets the search-results, used in search.comp.ts\n  setResults(results: any): void {\n    this.searchResults.next(results);\n  }\n  getResults(): Observable<any> {\n    return this.searchResults.asObservable();\n  }\n\n\n  // Function that gets a Persons ID so we can se more details about a specific person.\n  getPerson(id: number): Observable<any> {\n    const actorUrl = `${this.BASE_URL}/3/person/${id}?api_key=${this.API_KEY}`;\n    return this.httpClient.get<any>(actorUrl);\n  }\n\n  // Function that gets a specific movies credits, we can see a movies cast/crew.\n  getCredits(id: number) {\n    return this.httpClient.get(`${this.MOVIE_URL}${id}/credits?api_key=${this.API_KEY}`);\n  }\n}\n\n\n\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { MovieDetailComponent } from './movie-detail/movie-detail.component';\nimport { PersonDetailComponent } from './person-detail/person-detail.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'movie-detail/:id', component: MovieDetailComponent },\n  { path: 'person-detail/:id', component: PersonDetailComponent },\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n\n})\n\n\nexport class AppComponent {\n  title = 'TMDB app';\n}\n","<h1>{{title}}</h1>\n<a routerLink=\"/\">\n    <img src=\"https://www.themoviedb.org/assets/2/v4/logos/312x276-primary-green-74212f6247252a023be0f02a5a45794925c3689117da9d20ffe47742a665c518.png\"\n        alt=\"logo\" height=\"60px\">\n</a>\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { MovieDetailComponent } from './movie-detail/movie-detail.component';\nimport { SearchComponent } from './search/search.component';\nimport { SearchResultComponent } from './search-result/search-result.component';\nimport { PersonDetailComponent } from './person-detail/person-detail.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n\n    MovieDetailComponent,\n    DashboardComponent,\n    SearchComponent,\n    SearchResultComponent,\n    PersonDetailComponent,\n\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\n\nexport class DashboardComponent implements OnInit {\n  movies: any[];\n\n\n  constructor(private apiService: ApiService) { }\n\n\n  // OnInit, get popular movies and display.\n  ngOnInit(): void {\n    this.apiService.getMovies().subscribe((data) => {\n      console.log(data);\n      this.movies = data['results'];\n    });\n\n\n  }\n}\n","<app-search></app-search>\n<app-search-result></app-search-result>\n\n<div class=\"test\">\n    <h1>Popular Movies</h1>\n</div>\n\n<div class=\"inside\" *ngFor=\"let movie of movies\">\n\n    <img src=\"https://image.tmdb.org/t/p/w185{{movie.poster_path}}\" alt=\"Poster of movie\" />\n\n    <h6><a class=\"con\" routerLink=\"/movie-detail/{{movie.id}}\">{{movie.title}}</a></h6>\n    <p>Vote: {{movie.vote_average}}</p>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Movie } from '../movie';\nimport { ActivatedRoute } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-movie-detail',\n  templateUrl: './movie-detail.component.html',\n  styleUrls: ['./movie-detail.component.css']\n})\n\nexport class MovieDetailComponent implements OnInit {\n  movie: Movie;\n\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n  ) { }\n\n  ngOnInit() {\n    this.getMovie();\n    this.getDetails();\n  }\n\n\n  getMovie() {\n    const movieId = window.location.pathname.split('/')[2];\n    this.apiService\n      .getMovie(movieId)\n      .subscribe((response) => {\n        this.movie = response;\n      });\n  }\n\n\n  getDetails(): void {\n    const id = parseInt(this.route.snapshot.paramMap.get('id'), 10);\n    this.apiService.getCredits(id).subscribe((response: any) => {\n      console.log('credits', response);\n      this.movie.cast = response.cast;\n      this.movie.crew = response.crew;\n      console.log('cast', this.movie.cast);\n    });\n  };\n}\n\n\n\n\n\n","<div class=\"test\" *ngIf=\"movie\">\n\n    <img id=\"img-list\" src=\"https://image.tmdb.org/t/p/w780{{movie.backdrop_path}}\" alt=\"Poster of movie\" />\n    <h2>{{movie.title}}</h2>\n    <h4 class=\"overview\">Overview</h4>\n    <p class=\"con\">{{movie.overview}}</p>\n    <p>Vote: {{movie.vote_average}}</p>\n    <p>Runtime: {{movie.runtime}}min</p>\n    <p>Release date: {{movie.release_date}}</p>\n    <p>Budget: ${{movie.budget}}</p>\n\n\n    <h3 class=\"con\">Cast:</h3>\n    <ul>\n        <li *ngFor=\"let castMember of movie.cast\">\n            <img class=\"castPersons\" *ngIf=\"castMember.profile_path\"\n                src=\"http://image.tmdb.org/t/p/w185{{castMember.profile_path}}\" height=\"150\" alt=\"Profile of actor\">\n\n            Name: <a routerLink=\"/person-detail/{{castMember.id}}\">{{castMember.name}}</a> Character:\n            {{castMember.character}}\n        </li>\n    </ul>\n\n    <h3>Crew:</h3>\n    <ul>\n        <li *ngFor=\"let crewMember of movie.crew\">Name: {{crewMember.name}} Job: {{crewMember.job}}</li>\n    </ul>\n</div>\n\n<div *ngIf=\"!movie\">\n    <h1>Please wait... :D</h1>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { ApiService } from '../api.service';\nimport { Person } from '../person';\n\n@Component({\n  selector: 'app-person-detail',\n  templateUrl: './person-detail.component.html',\n  styleUrls: ['./person-detail.component.scss']\n})\nexport class PersonDetailComponent implements OnInit {\n  actor: Person;\n  id: number;\n  age: number;\n  imageUri = 'https://image.tmdb.org/t/p/w300/';\n\n  constructor(\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private location: Location\n  ) { }\n\n  ngOnInit(): void {\n    this.id = parseInt(this.route.snapshot.paramMap.get('id'), 10);\n    this.getPerson();\n  }\n  // Fuction that gets persons id and checks if actor.birthday is true \n  // and then calculates age with BD and time now.\n  getPerson(): void {\n    this.apiService.getPerson(this.id).subscribe(\n      actor => {\n        this.actor = actor;\n        if (actor.birthday) {\n          const birth = new Date(actor.birthday).getTime();\n          let now;\n          const timeDiff: number = now - birth;\n          this.age = Math.floor(timeDiff / 31536000000);\n        }\n      },\n      error => {\n        console.error(error);\n      }\n    );\n  }\n  // If Person have a profile image, display it.\n  getPersonProfileUri(actor: Person): string {\n    if (actor.profile_path) {\n      return this.imageUri + actor.profile_path;\n    }\n\n  }\n}\n","<div class=\"test\" *ngIf=\"actor\">\n\n    <img [src]=\"getPersonProfileUri(actor)\" alt=\"Picture of Person\" />\n    <h2 class=\"overview\">{{actor.name}}</h2>\n    <ul>\n        <li *ngIf=\"actor.birthday\">Birthday: {{actor.birthday}}</li>\n        <li *ngIf=\"age\">Age: {{age}}</li>\n        <li *ngIf=\"actor.place_of_birth\">Place of birth: {{actor.place_of_birth}}</li>\n\n    </ul>\n\n    <h4 class=\"overview\">Biography</h4>\n    <p class=\"castPersons\">{{actor.biography}}</p>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-search-result',\n  templateUrl: './search-result.component.html',\n  styleUrls: ['./search-result.component.scss']\n})\nexport class SearchResultComponent implements OnInit {\n  searchResults: any;\n\n  constructor(private apiService: ApiService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.apiService.searchResults.subscribe(\n      success => {\n        this.searchResults = success;\n      },\n      error => {\n        console.error(error);\n      }\n    );\n  }\n  // Navigates to the search-results(#searchBox input) path + id.\n  goTo(path: string, id: number): void {\n    this.searchResults = null;\n    const searchBoxElm: HTMLInputElement = document.querySelector('#searchBox');\n    searchBoxElm.value = '';\n    this.router.navigate([path, id]);\n  }\n}\n","<div *ngIf=\"searchResults\">\n    <div *ngFor=\"let i of searchResults\">\n        <div *ngIf=\"i.media_type === 'movie'\">\n            <div (click)=\"goTo('/movie-detail', i.id)\">\n                <a class=\"result-title\">{{ i.title }}</a>\n            </div>\n        </div>\n        <div *ngIf=\"i.media_type === 'person'\">\n            <div (click)=\"goTo('/person-detail', i.id)\">\n                <a class=\"result-title\">{{ i.name }}</a>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\n\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit {\n  searchResult: any;\n  timer: any;\n  searchValue = '';\n\n  constructor(\n    private apiService: ApiService,\n\n  ) { }\n\n  ngOnInit(): void { }\n\n  search(query: string): void {\n    this.searchResult = null;\n    clearTimeout(this.timer);\n    this.timer = setTimeout(this.executeSearch.bind(this), 250, query);\n  }\n  // If search-input is < 2 give no results\n  // If search-input is > 2 give success and \n  // display results of media type 'movie' and 'person'\n  // depending on media type matches string/input.\n  executeSearch(query: string): void {\n    if (query === '' || query.length <= 2) {\n      this.apiService.setResults(null);\n      return;\n    }\n\n    this.apiService.searchTmdb(query).subscribe(\n      success => {\n        this.searchResult = success.results.filter(\n          (item: { media_type: string }) =>\n            item.media_type === 'movie' || item.media_type === 'person'\n        );\n        this.apiService.setResults(this.searchResult);\n      },\n      error => {\n        console.error(error);\n      }\n    );\n  }\n}\n","<form class=\"form-inline my-2 my-lg-0\">\n    <input #searchBox id=\"searchBox\" class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search here...\"\n        aria-label=\"Search\" (input)=\"search(searchBox.value)\" />\n</form>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}