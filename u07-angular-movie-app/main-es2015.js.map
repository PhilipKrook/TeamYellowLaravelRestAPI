{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/api.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/movie-detail/movie-detail.component.ts","./src/app/movie-detail/movie-detail.component.html","./src/app/person-detail/person-detail.component.ts","./src/app/person-detail/person-detail.component.html","./src/app/search-result/search-result.component.ts","./src/app/search-result/search-result.component.html","./src/app/search/search.component.ts","./src/app/search/search.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class ApiService {\n  private httpOptions = {\n    headers: new HttpHeaders({ 'Content-type': 'application/json' })\n  };\n\n\n  // Use your own API-key here.\n  private API_KEY = '0e6da493848bce79b514981005d24f35';\n\n  // Different URLs used in the functions below.\n  private MOVIE_URL = 'https://api.themoviedb.org/3/movie/';\n\n  private BASE_URL = 'https://api.themoviedb.org';\n\n  private SEARCH_URL = 'https://api.themoviedb.org/3/search/multi';\n\n  public searchResults = new Subject();\n\n\n  constructor(private httpClient: HttpClient) { }\n\n  // Function that displays popular movies at Dashboard.\n  getMovies() {\n    return this.httpClient.get(`https://api.themoviedb.org/3/movie/popular?api_key=${this.API_KEY}`);\n  }\n\n  // Function that gets the id for a specific movie, to show more details about it.\n  getMovie(movieId) {\n    return this.httpClient.get(`${this.MOVIE_URL}${movieId}?api_key=${this.API_KEY}`);\n  }\n\n  // Function used to search in TMDBs API, it takes a query(string,input) and joins it with\n  // SEARCH_URL to build up a correct URL.\n  searchTmdb(query: string): Observable<any> {\n    const params: string = [`query=${query}`, `api_key=${this.API_KEY}`].join('&');\n    const queryUrl = `${this.SEARCH_URL}?${params}`;\n    return this.httpClient.get(queryUrl);\n  }\n\n  // Sets and gets the search-results, used in search.comp.ts\n  setResults(results: any): void {\n    this.searchResults.next(results);\n  }\n  getResults(): Observable<any> {\n    return this.searchResults.asObservable();\n  }\n\n\n  // Function that gets a Persons ID so we can se more details about a specific person.\n  getPerson(id: number): Observable<any> {\n    const actorUrl = `${this.BASE_URL}/3/person/${id}?api_key=${this.API_KEY}`;\n    return this.httpClient.get<any>(actorUrl);\n  }\n\n  // Function that gets a specific movies credits, we can see a movies cast/crew.\n  getCredits(id: number) {\n    return this.httpClient.get(`${this.MOVIE_URL}${id}/credits?api_key=${this.API_KEY}`);\n  }\n}\n\n\n\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { MovieDetailComponent } from './movie-detail/movie-detail.component';\nimport { PersonDetailComponent } from './person-detail/person-detail.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'movie-detail/:id', component: MovieDetailComponent },\n  { path: 'person-detail/:id', component: PersonDetailComponent },\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n\n})\n\n\nexport class AppComponent {\n  title = 'TMDB app';\n}\n","<h1>{{title}}</h1>\n<a routerLink=\"/\">\n    <img src=\"https://www.themoviedb.org/assets/2/v4/logos/312x276-primary-green-74212f6247252a023be0f02a5a45794925c3689117da9d20ffe47742a665c518.png\"\n        alt=\"logo\" height=\"60px\">\n</a>\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { MovieDetailComponent } from './movie-detail/movie-detail.component';\nimport { SearchComponent } from './search/search.component';\nimport { SearchResultComponent } from './search-result/search-result.component';\nimport { PersonDetailComponent } from './person-detail/person-detail.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n\n    MovieDetailComponent,\n    DashboardComponent,\n    SearchComponent,\n    SearchResultComponent,\n    PersonDetailComponent,\n\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\n\nexport class DashboardComponent implements OnInit {\n  movies: any[];\n\n\n  constructor(private apiService: ApiService) { }\n\n\n  // OnInit, get popular movies and display.\n  ngOnInit(): void {\n    this.apiService.getMovies().subscribe((data) => {\n      console.log(data);\n      this.movies = data['results'];\n    });\n\n\n  }\n}\n","<app-search></app-search>\n<app-search-result></app-search-result>\n\n<div class=\"test\">\n    <h1>Popular Movies</h1>\n</div>\n\n<div class=\"inside\" *ngFor=\"let movie of movies\">\n\n    <img src=\"https://image.tmdb.org/t/p/w185{{movie.poster_path}}\" alt=\"Poster of movie\" />\n\n    <h6><a class=\"con\" routerLink=\"/movie-detail/{{movie.id}}\">{{movie.title}}</a></h6>\n    <p>Vote: {{movie.vote_average}}</p>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Movie } from '../movie';\nimport { ActivatedRoute } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-movie-detail',\n  templateUrl: './movie-detail.component.html',\n  styleUrls: ['./movie-detail.component.css']\n})\n\nexport class MovieDetailComponent implements OnInit {\n  movie: Movie;\n\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n  ) { }\n\n  ngOnInit() {\n    this.getMovie();\n    this.getDetails();\n  }\n\n\n  getMovie() {\n    const movieId = window.location.pathname.split('/')[2];\n    this.apiService\n      .getMovie(movieId)\n      .subscribe((response) => {\n        this.movie = response;\n      });\n  }\n\n\n  getDetails(): void {\n    const id = parseInt(this.route.snapshot.paramMap.get('id'), 10);\n    this.apiService.getCredits(id).subscribe((response: any) => {\n      console.log('credits', response);\n      this.movie.cast = response.cast;\n      this.movie.crew = response.crew;\n      console.log('cast', this.movie.cast);\n    });\n  };\n}\n\n\n\n\n\n","<div class=\"test\" *ngIf=\"movie\">\n\n    <img id=\"img-list\" src=\"https://image.tmdb.org/t/p/w780{{movie.backdrop_path}}\" alt=\"Poster of movie\" />\n    <h2>{{movie.title}}</h2>\n    <h4 class=\"overview\">Overview</h4>\n    <p class=\"con\">{{movie.overview}}</p>\n    <p>Vote: {{movie.vote_average}}</p>\n    <p>Runtime: {{movie.runtime}}min</p>\n    <p>Release date: {{movie.release_date}}</p>\n    <p>Budget: ${{movie.budget}}</p>\n\n\n    <h3 class=\"con\">Cast:</h3>\n    <ul>\n        <li *ngFor=\"let castMember of movie.cast\">\n            <img class=\"castPersons\" *ngIf=\"castMember.profile_path\"\n                src=\"http://image.tmdb.org/t/p/w185{{castMember.profile_path}}\" height=\"150\" alt=\"Profile of actor\">\n\n            Name: <a routerLink=\"/person-detail/{{castMember.id}}\">{{castMember.name}}</a> Character:\n            {{castMember.character}}\n        </li>\n    </ul>\n\n    <h3>Crew:</h3>\n    <ul>\n        <li *ngFor=\"let crewMember of movie.crew\">Name: {{crewMember.name}} Job: {{crewMember.job}}</li>\n    </ul>\n</div>\n\n<div *ngIf=\"!movie\">\n    <h1>Please wait... :D</h1>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { ApiService } from '../api.service';\nimport { Person } from '../person';\n\n@Component({\n  selector: 'app-person-detail',\n  templateUrl: './person-detail.component.html',\n  styleUrls: ['./person-detail.component.scss']\n})\nexport class PersonDetailComponent implements OnInit {\n  actor: Person;\n  id: number;\n  age: number;\n  imageUri = 'https://image.tmdb.org/t/p/w300/';\n\n  constructor(\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private location: Location\n  ) { }\n\n  ngOnInit(): void {\n    this.id = parseInt(this.route.snapshot.paramMap.get('id'), 10);\n    this.getPerson();\n  }\n  // Fuction that gets persons id and checks if actor.birthday is true \n  // and then calculates age with BD and time now.\n  getPerson(): void {\n    this.apiService.getPerson(this.id).subscribe(\n      actor => {\n        this.actor = actor;\n        if (actor.birthday) {\n          const birth = new Date(actor.birthday).getTime();\n          let now;\n          const timeDiff: number = now - birth;\n          this.age = Math.floor(timeDiff / 31536000000);\n        }\n      },\n      error => {\n        console.error(error);\n      }\n    );\n  }\n  // If Person have a profile image, display it.\n  getPersonProfileUri(actor: Person): string {\n    if (actor.profile_path) {\n      return this.imageUri + actor.profile_path;\n    }\n\n  }\n}\n","<div class=\"test\" *ngIf=\"actor\">\n\n    <img [src]=\"getPersonProfileUri(actor)\" alt=\"Picture of Person\" />\n    <h2 class=\"overview\">{{actor.name}}</h2>\n    <ul>\n        <li *ngIf=\"actor.birthday\">Birthday: {{actor.birthday}}</li>\n        <li *ngIf=\"age\">Age: {{age}}</li>\n        <li *ngIf=\"actor.place_of_birth\">Place of birth: {{actor.place_of_birth}}</li>\n\n    </ul>\n\n    <h4 class=\"overview\">Biography</h4>\n    <p class=\"castPersons\">{{actor.biography}}</p>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-search-result',\n  templateUrl: './search-result.component.html',\n  styleUrls: ['./search-result.component.scss']\n})\nexport class SearchResultComponent implements OnInit {\n  searchResults: any;\n\n  constructor(private apiService: ApiService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.apiService.searchResults.subscribe(\n      success => {\n        this.searchResults = success;\n      },\n      error => {\n        console.error(error);\n      }\n    );\n  }\n  // Navigates to the search-results(#searchBox input) path + id.\n  goTo(path: string, id: number): void {\n    this.searchResults = null;\n    const searchBoxElm: HTMLInputElement = document.querySelector('#searchBox');\n    searchBoxElm.value = '';\n    this.router.navigate([path, id]);\n  }\n}\n","<div *ngIf=\"searchResults\">\n    <div *ngFor=\"let i of searchResults\">\n        <div *ngIf=\"i.media_type === 'movie'\">\n            <div (click)=\"goTo('/movie-detail', i.id)\">\n                <a class=\"result-title\">{{ i.title }}</a>\n            </div>\n        </div>\n        <div *ngIf=\"i.media_type === 'person'\">\n            <div (click)=\"goTo('/person-detail', i.id)\">\n                <a class=\"result-title\">{{ i.name }}</a>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\n\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit {\n  searchResult: any;\n  timer: any;\n  searchValue = '';\n\n  constructor(\n    private apiService: ApiService,\n\n  ) { }\n\n  ngOnInit(): void { }\n\n  search(query: string): void {\n    this.searchResult = null;\n    clearTimeout(this.timer);\n    this.timer = setTimeout(this.executeSearch.bind(this), 250, query);\n  }\n  // If search-input is < 2 give no results\n  // If search-input is > 2 give success and \n  // display results of media type 'movie' and 'person'\n  // depending on media type matches string/input.\n  executeSearch(query: string): void {\n    if (query === '' || query.length <= 2) {\n      this.apiService.setResults(null);\n      return;\n    }\n\n    this.apiService.searchTmdb(query).subscribe(\n      success => {\n        this.searchResult = success.results.filter(\n          (item: { media_type: string }) =>\n            item.media_type === 'movie' || item.media_type === 'person'\n        );\n        this.apiService.setResults(this.searchResult);\n      },\n      error => {\n        console.error(error);\n      }\n    );\n  }\n}\n","<form class=\"form-inline my-2 my-lg-0\">\n    <input #searchBox id=\"searchBox\" class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search here...\"\n        aria-label=\"Search\" (input)=\"search(searchBox.value)\" />\n</form>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}